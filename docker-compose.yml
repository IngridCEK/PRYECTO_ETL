version: '3.8'

services:
  # PostgreSQL Database para Airflow
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # MongoDB para almacenar datos de las APIs
  mongo:
    image: mongo:6.0
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  # Airflow Webserver con Dockerfile personalizado
  webserver:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    image: custom-airflow:latest
    depends_on:
      - postgres
      - mongo
      - scheduler
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
      AIRFLOW_UID: 50000
      AIRFLOW_GID: 50000
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    ports:
      - "8080:8080"
    command: webserver
    restart: unless-stopped

  # Airflow Scheduler con Dockerfile personalizado
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    image: custom-airflow:latest
    depends_on:
      - postgres
      - mongo
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
      AIRFLOW_UID: 50000
      AIRFLOW_GID: 50000
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    command: scheduler
    restart: unless-stopped

  # Streamlit Dashboard
  streamlit:
    build: ./streamlit_app
    ports:
      - "8501:8501"
    depends_on:
      - mongo

volumes:
  postgres_data:
  mongo_data:
